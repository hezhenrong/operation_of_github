B和Z都在自己仓库里面项目一样后，B发现Z有些内容没有做好，B就帮Z做了，并且提交到了自己的仓库。Z也发现自己有些内容没做好，便自己做了，然后也提交到了自己的仓库，然后Z想提交到B的仓库时，发现B的仓库有改动了，接下来Z该如何操作呢

思路：Z要先撤回自己提交的那个版本，然后把B做了修改的版本弄到本地，Z自己仓库也要是B的那个版本信息。然后如果Z再要修改的话，要在B的新版本上修改再提交

1、Z撤回自己版本的操作

git log或git log --graph查看提交日志

git reset --hard HEAD^回到上一个版本，或git reset --hard commit_id，这里commit_id是在日志中的版本id，是一串带有数字的东西来的。做完这个操作后，你输入git log，你会看到日志版本是回去了，同时本地的版本也回去了，这时你需要把自己仓库上的版本回退一下

强制推送到远程分支的操作如下
git push -f

做完上面的操作以后，本地和自己仓库上的版本都回退到之前了，可以通过之前提到过的从另一仓库更新的方法对自己的代码进行更新，操作如下：

2、首先要先确定一下是否建立了主repo的远程源： git remote -v，如果里面只能看到你自己的两个源(fetch 和 push)，那就需要添加主repo的源： git remote add upstream URL
git remote -v

这里的upstream是我们建立的远程branch的一个本地别名。 注意: 一般有https或者ssh的方式，如果是ssh的方式，则需要添加ssh的URL，不能添加https的方式，否则不能在ssh下访问该URL，另外，如果想删除remote的upstream标签，则可以运行： git remote rm upstream
然后你就能看到upstream了。

如果想与主repo合并，要进行以下操作： 
git fetch upstream
git merge upstream/master

做完上面操作后，本地已经获得B仓库代码的更新了，接下来是要更新到自己的仓库上，操作如下：
git status
git add *
git status
git log
git push origin master
输入账号密码

3、最后可以在自己那里看到更新了，如果要再修改提交，就按第一次合作的操作去做
